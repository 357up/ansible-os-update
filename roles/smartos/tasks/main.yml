- name: get latest SmartOS repo version
  run_once: true
  become: false
  shell: curl -s http://pkgsrc.joyent.com/packages/SmartOS/ | egrep "20[0-9]{2}Q[0-9]{1}" | sed 's/^<a href=\"//g' | sed 's/\/\">.*//g' | sort | tail -1
  register: getLatestSmartOS
  changed_when: false

- name: check latest SmartOS repo
  run_once: true
  become: false
  local_action: debug var=getLatestSmartOS.stdout

- name: get zone name
  command: zonename
  register: zonename

- name: register zone name
  set_fact:
    zone: "{{ zonename.stdout }}"

- name: SmartOS pkgin repositories.conf
  lineinfile:
    backup: yes
    dest: "{{ pkginReposConf }}"
    #insertafter: EOF
    regexp: "^http.*"
    line: "{{ reposLine }}"
    state: present
  when:
  - ansible_os_family == "Solaris"
  - ( smartos_pkgin_global_zone or zone != 'global' )

- name: SmartOS pkgin update
  shell: /opt/local/bin/pkgin up
  register: output
  when:
  - ansible_os_family == "Solaris"
  - ( smartos_pkgin_global_zone or zone != 'global' )
  changed_when: "'is up-to-date' not in output.stdout"
  notify:
  - log to file

- meta: flush_handlers

- name: SmartOS pkgin upgrade
  shell: /opt/local/bin/pkgin -y fug
  register: output
  when:
  - ansible_os_family == "Solaris"
  - ( smartos_pkgin_global_zone or zone != 'global' )
  changed_when: "'nothing to do' not in output.stdout"
  notify:
  - log to file

- meta: flush_handlers